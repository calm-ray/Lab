server:
  port: 8080

spring:
  application:
    name: customer
  datasource:
    url: jdbc:postgresql://postgres:5432/customer
    username: root
    password: myPassword
  jpa:
    properties:
      hibernate:
        dialect: org.hibernate.dialect.PostgreSQLDialect
        format_sql: "true"
    hibernate:
      ddl-auto: create-drop
    show-sql: true
  rabbitmq:
    addresses: rabbitmq:5672

eureka:
  client:
    enabled: false # change it to true if not using k8s
    service-url:
      defaultZone: http://eureka-server:8761/eureka

management:
  zipkin:
    tracing:
      endpoint: http://zipkin:9411/api/v2/spans
  tracing:
    sampling:
      probability: 1.0
  health:
    circuitbreakers:
      enabled: true
  endpoints:
    web:
      exposure:
        include: health
  endpoint:
    health:
      show-details: always

# Resilience4j Circuit Breaker Pattern
resilience4j:
  circuitbreaker:
    configs:
      default:
        register-health-indicator: true
        sliding-window-size: 10
        sliding-window-type: count_based
        permitted-number-of-calls-in-half-open-state: 3
        minimum-number-of-calls: 5
        wait-duration-in-open-state:
          seconds: 5
        writable-stack-trace-enabled: true
        automatic-transition-from-open-to-half-open-enabled: true
    instances:
      customerCircuitBreaker:
        base-config: default

# Resilience4j configuration for Retry Pattern
#resilience4j:
#  retry:
#    configs:
#      default:
#        max-attempts: 5
#        wait-duration:
#          seconds: 2
#    instances:
#      customerRetry:
#        base-config: default

# Resilience4j for RateLimiter Pattern
#resilience4j:
#  ratelimiter:
#    configs:
#      default:
#        timeoutDuration: 0
#        limitRefreshPeriod: 4s
#        limitForPeriod: 2
#    instances:
#      customerRateLimiter:
#        base-config: default